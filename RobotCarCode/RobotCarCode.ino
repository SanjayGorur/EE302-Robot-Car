/**/void setup() {    // Set ports for motor outputs  const int motorLeft = ;  const int motorRight = ;    // Set ports for photoresistor sensor input  const int leftColorPort = ;  const int rightColorPort = ;  const int middleColorPort = ;    // Initialize values read from photoresistors  int leftColorVal = 0;  int rightColorVal = 0;  int middleColorVal = 0;    // Set ports for IR sensor input  const int leftIRPort = ;  const int rightIRPort = ;  const int middleIRPort = ;    // Intilize values read from IR sensors  int leftIRVal = 0;  int rightIRVal = 0;  int middleIRVal = 0;    // Initialize run duration for motors, as well as white/black voltage cut off  // and distance to stop at  int duration = 0; // Update after testing  int BlacktoWhite = 3; //White < 3V, black > 3V  int stopDistance = 0; // Update after testing          // write with digital    // read will be analog}void loop() {      // Loop 1: Follow the sensors on lines. Break upon distance from wall.     while(analogRead(middleIRPort) < stopDistance):        // Subloop 1: Both sensors see white. On this, continue forward for duration.    while(analogRead(rightColorPort) < BlacktoWhite and analogRead(leftColorPort) < BlacktoWhite):            // Write HIGH output to both motors      digitalWrite(motorRight, HIGH);      digitalWrite(motorLeft, HIGH);            // Wait with motors on.      delay(duration);            // Turn off motors on       digitalWrite(motorRight, LOW);      digitalWrite(motorLeft, LOW);        // Subloop 2: Left sensor sees black. Right sensor sees white.    while(analogRead(rightColorPort < BlacktoWhite) and analogRead(leftColorPort > BlacktoWhite)):            // Condition 1: Middle sensor sees white. This is normal left turn.      while(analogRead(middleColorPort) < BlacktoWhite):                digitalWrite(motorLeft, LOW);        digitalWrite(motorRight, HIGH);                delay(duration);                digitalWrite(motorRight, LOW);              // Condition 2: Middle sensor sees black. This is the right angle turn condition!        // Left side off. Right side on. For duration.       while(analogRead(middleColorPort) > BlacktoWhite):                // Subloop 3: Left sensor sees white. Right sensor sees black.      // Condition 1: Middle sensor sees white. This is normal right turn.            // Condition 2: Middle sensor sees black. This is right angle turn to right condition!    while():  // Loop 2: Delay until wall removed.    while():  // Loop 3: Upon wall being removed, move forwards using distance sensors as guideance.  // Stop when sensor finds line.    // If voltage right is less than voltage left, turn left.    // If volatage left is less than voltage left, turn right.    // If voltages equal, move forwards.}